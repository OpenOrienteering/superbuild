# This file is part of OpenOrienteering.

# Copyright 2019 Kai Pastor
#
# Redistribution and use is allowed according to the terms of the BSD license:
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products 
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

parameters:
  outputSuffix: $(TARGET_SUFFIX)


steps:
- bash: |
    set -e
    set -x
    test -d build/default || exit 0
    #
    TEST_RESULTS="${PWD}/testResults"
    rm -Rf "${TEST_RESULTS}"
    #
    cd build/default
    for I in */Testing/*/Test.xml; do
      if test -f "${I}"; then
        DIR=`echo ${I%/Test.xml} | sed -e 's,/Testing/,_,g'`
        mkdir -p "${TEST_RESULTS}/${DIR}"
        cp "$I" "${TEST_RESULTS}/${DIR}/"
      fi
    done
    #
    set +x # Tracing the echo line may overwrite the desired effect.
    if test -d "${TEST_RESULTS}"; then
      echo "##vso[task.setVariable variable=PUBLISH_TEST_RESULTS]1"
    fi
    # Create published artifacts only when successful until here.
    echo "##vso[task.setVariable variable=CREATE_ARTIFACTS]$(openorienteering.superbuild.createArtifacts)"
    # Ensure that this variable is defined in the current job.
    echo "##vso[task.setVariable variable=OUTPUT_SUFFIX]${{ parameters.outputSuffix }}"
  displayName: 'Prepare publishing'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'cTest'
    testResultsFiles: 'testResults/*/Test.xml'
    searchFolder: '$(Build.SourcesDirectory)'
    testRunTitle: '$(IMAGE_NAME)$(OUTPUT_SUFFIX)'
    buildPlatform: '$(IMAGE_NAME)'
  condition: in(variables['PUBLISH_TEST_RESULTS'], '1', 'on', 'true', 'yes')
  displayName: 'Publish test results'

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'superbuild-$(IMAGE_NAME)$(OUTPUT_SUFFIX)'
    targetPath: $(SUPERBUILD_INSTALL_DIR)
  condition: and(succeeded(), in(variables['CREATE_ARTIFACTS'], '1', 'on', 'true', 'yes'))
  displayName: 'Publish binary artifacts'

