# This file is part of OpenOrienteering.

# Copyright 2019-2024 Kai Pastor
#
# Redistribution and use is allowed according to the terms of the BSD license:
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products 
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

parameters:
  - name: jobPattern
    displayName: 'Enable jobs which contain this substring'
    type: string
    default: ''

jobs:
- job: Source
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - template: source.yml


- job: macOS
  condition: and(succeeded(), contains('^macOS$', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 180
  dependsOn: Source
  variables:
    IMAGE_NAME: 'macOS-11'
    SUPERBUILD_INSTALL_DIR: $(HOME)/superbuild
    QT_STYLE_OVERRIDE: fusion
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-macos.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          "-DCMAKE_PREFIX_PATH=$(SUPERBUILD_INSTALL_DIR)\;/usr"
          -DCMAKE_FIND_FRAMEWORK=LAST
          -DCMAKE_FIND_APPBUNDLE=LAST
          -DUSE_SYSTEM_OPENJPEG=OFF
          -DUSE_SYSTEM_LZMA=OFF
          -DUSE_SYSTEM_SQLITE3=OFF
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/share/gdal
        buildArgs: -j5
    - template: publish.yml


- job: Linux
  condition: and(succeeded(), contains('^Linux$', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 120
  dependsOn: macOS
  variables:
    IMAGE_NAME: 'ubuntu-20.04'
    SUPERBUILD_INSTALL_DIR: $(HOME)/superbuild
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-ubuntu.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/share/gdal
    - template: build-iwyu.yml
    - template: publish.yml


- job: MinGW_Linux
  condition: and(False, succeeded(), eq('MinGW_Linux', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 120
  dependsOn: Source
  variables:
    IMAGE_NAME: 'ubuntu-20.04'
    SUPERBUILD_INSTALL_DIR: $(HOME)/superbuild
    TARGET: x86_64-w64-mingw32
    TARGET_SUFFIX: -$(TARGET)
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-ubuntu.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          -DENABLE_$(TARGET)=1
          -D$(TARGET)_INSTALL_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)
          -D$(TARGET)_INSTALL_PREFIX=/usr
          -D$(TARGET)_TOOLCHAIN_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/toolchain
          -DMapper_GIT_LICENSING_PROVIDER=OFF
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/usr/share/gdal
          -Dmingw-w64_FIX_HEADERS=1
    - template: publish.yml


- job: Android_armv7
  condition: and(succeeded(), contains('^Android_armv7$', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 180
  dependsOn: Android_aarch64
  variables:
    IMAGE_NAME: 'macOS-11'
    SUPERBUILD_INSTALL_DIR: $(HOME)/superbuild
    TARGET: armv7a-linux-androideabi
    TARGET_SUFFIX: -$(TARGET)
    ANDROID_API_VERSION: android-29
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-macos.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          -DENABLE_$(TARGET)=1
          -D$(TARGET)_INSTALL_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)
          -D$(TARGET)_INSTALL_PREFIX=/usr
          -D$(TARGET)_TOOLCHAIN_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/toolchain
          -DUSE_SYSTEM_SQLITE3=OFF
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/usr/share/gdal
          -DANDROID_SDK_INSTALL_ROOT=$(HOME)
          -DANDROID_NDK_INSTALL_ROOT=$(HOME)
          -DANDROID_NDK_ROOT=FALSE
          -DANDROID_BUILD_LIBCXX=1
        buildArgs: -j5
    - template: publish.yml

- job: Android_aarch64
  condition: and(succeeded(), contains('^Android_aarch64$', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 180
  dependsOn: Source
  variables:
    IMAGE_NAME: 'macOS-11'
    SUPERBUILD_INSTALL_DIR: $(HOME)/superbuild
    TARGET: aarch64-linux-android
    TARGET_SUFFIX: -$(TARGET)
    ANDROID_API_VERSION: android-29
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-macos.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          -DENABLE_$(TARGET)=1
          -D$(TARGET)_INSTALL_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)
          -D$(TARGET)_INSTALL_PREFIX=/usr
          -D$(TARGET)_TOOLCHAIN_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/toolchain
          -DUSE_SYSTEM_SQLITE3=OFF
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/usr/share/gdal
          -DANDROID_SDK_INSTALL_ROOT=$(HOME)
          -DANDROID_NDK_INSTALL_ROOT=$(HOME)
          -DANDROID_NDK_ROOT=FALSE
          -DANDROID_BUILD_LIBCXX=1
        buildArgs: -j5
    - template: publish.yml

- job: Android_x86
  condition: and(succeeded(), contains('^Android_x86$', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 180
  dependsOn: Source
  variables:
    IMAGE_NAME: 'macOS-11'
    SUPERBUILD_INSTALL_DIR: $(HOME)/superbuild
    TARGET: i686-linux-android
    TARGET_SUFFIX: -$(TARGET)
    ANDROID_API_VERSION: android-29
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-macos.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          -DENABLE_$(TARGET)=1
          -D$(TARGET)_INSTALL_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)
          -D$(TARGET)_INSTALL_PREFIX=/usr
          -D$(TARGET)_TOOLCHAIN_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/toolchain
          -DUSE_SYSTEM_SQLITE3=OFF
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/usr/share/gdal
          -DANDROID_SDK_INSTALL_ROOT=$(HOME)
          -DANDROID_NDK_INSTALL_ROOT=$(HOME)
          -DANDROID_NDK_ROOT=FALSE
          -DANDROID_BUILD_LIBCXX=1
        buildArgs: -j5
    - template: publish.yml

- job: Android_x86_64
  condition: and(succeeded(), contains('^Android_x86_64$', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 180
  dependsOn: Android_x86
  variables:
    IMAGE_NAME: 'macOS-11'
    SUPERBUILD_INSTALL_DIR: $(HOME)/superbuild
    TARGET: x86_64-linux-android
    TARGET_SUFFIX: -$(TARGET)
    ANDROID_API_VERSION: android-29
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-macos.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          -DENABLE_$(TARGET)=1
          -D$(TARGET)_INSTALL_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)
          -D$(TARGET)_INSTALL_PREFIX=/usr
          -D$(TARGET)_TOOLCHAIN_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/toolchain
          -DUSE_SYSTEM_SQLITE3=OFF
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/$(TARGET)/usr/share/gdal
          -DANDROID_SDK_INSTALL_ROOT=$(HOME)
          -DANDROID_NDK_INSTALL_ROOT=$(HOME)
          -DANDROID_NDK_ROOT=FALSE
          -DANDROID_BUILD_LIBCXX=1
        buildArgs: -j5
    - template: publish.yml

- job: Windows_mingw32
  condition: and(succeeded(), contains('^Windows_mingw32$', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 240
  dependsOn: Source
  variables:
    IMAGE_NAME: 'windows-2019'
    MINGW: mingw32
    SUPERBUILD_INSTALL_DIR: 'C:/msys2'
    SUPERBUILD_INSTALL_DIR_NATIVE: 'C:\msys2'
    VERBOSE: 1
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-msys2.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          -G "MSYS Makefiles"
          -Ddefault_INSTALL_DIR=
          -Ddefault_INSTALL_PREFIX=$(SUPERBUILD_INSTALL_DIR)/$(MINGW)/superbuild
          -Ddefault_TOOLCHAIN_DIR=$(SUPERBUILD_INSTALL_DIR)/$(MINGW)/toolchain
          -Ddefault_PREFIX_PATH=$(SUPERBUILD_INSTALL_DIR)/$(MINGW)/superbuild
          -DUSE_SYSTEM_CURL=OFF
          -DUSE_SYSTEM_EXPAT=OFF
          -DUSE_SYSTEM_LIBICONV=OFF
          -DUSE_SYSTEM_LZMA=OFF
          -DUSE_SYSTEM_SQLITE3=OFF
          -DUSE_SYSTEM_ZLIB=OFF
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/$(MINGW)/superbuild/share/gdal
          -DSUPERBUILD_DOWNLOAD_DIR=../download
    - template: publish.yml
      parameters:
        outputSuffix: -$(MINGW)

- job: Windows_mingw64
  condition: and(succeeded(), contains('^Windows_mingw64$', '${{ parameters.jobPattern }}'))
  timeoutInMinutes: 240
  dependsOn: Source
  variables:
    IMAGE_NAME: 'windows-2019'
    MINGW: mingw64
    SUPERBUILD_INSTALL_DIR: 'C:/msys2'
    SUPERBUILD_INSTALL_DIR_NATIVE: 'C:\msys2'
    VERBOSE: 1
  pool:
    vmImage: '$(IMAGE_NAME)'
  steps:
    - template: setup-msys2.yml
    - template: build.yml
      parameters:
        cmakeArgs: >
          -G "MSYS Makefiles"
          -Ddefault_INSTALL_DIR=
          -Ddefault_INSTALL_PREFIX=$(SUPERBUILD_INSTALL_DIR)/$(MINGW)/superbuild
          -Ddefault_TOOLCHAIN_DIR=$(SUPERBUILD_INSTALL_DIR)/$(MINGW)/toolchain
          -Ddefault_PREFIX_PATH=$(SUPERBUILD_INSTALL_DIR)/$(MINGW)/superbuild
          -DUSE_SYSTEM_CURL=OFF
          -DUSE_SYSTEM_EXPAT=OFF
          -DUSE_SYSTEM_LIBICONV=OFF
          -DUSE_SYSTEM_LZMA=OFF
          -DUSE_SYSTEM_SQLITE3=OFF
          -DUSE_SYSTEM_ZLIB=OFF
          -DMapper_GIT_GDAL_DATA_DIR=$(SUPERBUILD_INSTALL_DIR)/$(MINGW)/superbuild/share/gdal
          -DSUPERBUILD_DOWNLOAD_DIR=../download
    - template: publish.yml
      parameters:
        outputSuffix: -$(MINGW)
