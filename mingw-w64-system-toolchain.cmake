# This file is part of OpenOrienteering.

# Copyright 2016 Kai Pastor
#
# Redistribution and use is allowed according to the terms of the BSD license:
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products 
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set(system_name_32 i686-w64-mingw32)
set(system_name_64 x86_64-w64-mingw32)
set(version     1)

option(ENABLE_${system_name_32} "Enable the ${system_name_32} toolchain" 0)
option(ENABLE_${system_name_64} "Enable the ${system_name_64} toolchain" 0)

foreach(system_name ${system_name_32} ${system_name_64})
	if(NOT ENABLE_${system_name})
		continue()
	endif()
	
	foreach(tool gcc g++ windres)
		find_program(${system_name}-${tool}_EXECUTABLE ${system_name}-${tool})
		if(${${system_name}-${tool}_EXECUTABLE} MATCHES "NOTFOUND")
			message(FATAL_ERROR "${system_name}-${tool} must be available")
		endif()
		mark_as_advanced(${system_name}-${tool}_EXECUTABLE)
	endforeach()
	
	set(cmakelists
"# Generated by ${CMAKE_CURRENT_LIST_FILE}\n"
[[

cmake_minimum_required(VERSION 3.1)
cmake_policy(SET CMP0053 NEW)

project(]] ${system_name} [[-Toolchain NONE)

file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/toolchain.cmake"
"# Generated by " ${CMAKE_CURRENT_LIST_FILE} "
  
  set(CMAKE_SYSTEM_NAME       Windows)
  set(SUPERBUILD_TOOLCHAIN_TRIPLET \"]] ${system_name} [[\")
  set(CMAKE_C_COMPILER        \"]] "${${system_name}-gcc_EXECUTABLE}" [[\")
  set(CMAKE_CXX_COMPILER      \"]] "${${system_name}-g++_EXECUTABLE}" [[\")
  set(CMAKE_RC_COMPILER       \"]] "${${system_name}-windres_EXECUTABLE}" [[\")
  # Some packages don't build well with spaces in the path (\"Program Files\").
  set(CMAKE_INSTALL_PREFIX    \"/ProgramFiles\" CACHE PATH
    \"Install path prefix, prepended onto install directories.\")
  # \todo This is a superbuild property, not a toolchain property.
  set(CMAKE_FIND_ROOT_PATH    \"\${CMAKE_INSTALL_PREFIX}\")
  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
  set(CMAKE_RULE_MESSAGES   OFF CACHE BOOL \"Whether to report a message for each make rule\")
  set(CMAKE_TARGET_MESSAGES OFF CACHE BOOL \"Whether to report a message for each target\")
  set(CMAKE_VERBOSE_MAKEFILE ON CACHE BOOL \"Enable verbose output from Makefile builds\")
")
]]
)
    string(MD5 md5 "${cmakelists}")
    
    superbuild_package(
      NAME         ${system_name}-toolchain
      VERSION      ${version}
      SYSTEM_NAME  ${system_name}
      
      SOURCE_WRITE
        CMakeLists.txt cmakelists
      
      USING md5
      
      BUILD [[
        CONFIGURE_COMMAND
          "${CMAKE_COMMAND}" -E touch_nocreate ${md5}
        COMMAND
          "${CMAKE_COMMAND}" "${SOURCE_DIR}"
        INSTALL_COMMAND "${CMAKE_COMMAND}" -E copy_if_different
          "${BINARY_DIR}/toolchain.cmake" "${CMAKE_STAGING_PREFIX}/toolchain.cmake"
      ]]
    )
endforeach(system_name)
